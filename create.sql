create table actor (actor_id serial not null, last_update timestamp(6), first_name varchar(255), last_name varchar(255), primary key (actor_id));
create table address (address_id serial not null, last_update timestamp(6), address varchar(255), address2 varchar(255), district varchar(255), phone varchar(255), postal_code varchar(255) not null, primary key (address_id));
create table category (category_id serial not null, last_update timestamp(6), name varchar(255), primary key (category_id));
create table city (city_id serial not null, last_update timestamp(6) not null, city varchar(255), primary key (city_id));
create table country (country_id serial not null, last_update timestamp(6) not null, country varchar(255), primary key (country_id));
create table customer (active varchar(1), create_date date, customer_id serial not null, last_update timestamp(6), email varchar(255) not null, first_name varchar(255), last_name varchar(255), primary key (customer_id));
create table film (film_id serial not null, language_id integer, original_language_id integer not null, rental_rate float(53), replacement_cost float(53), last_update timestamp(6), length bigint, rental_duration bigint, description varchar(255), rating varchar(255), release_year varchar(255), special_features varchar(255), title varchar(255), primary key (film_id));
create table film_actor (actor_id integer not null, film_id integer not null, last_update timestamp(6), primary key (actor_id, film_id));
create table film_category (category_id integer not null, film_id integer not null, last_update timestamp(6), primary key (category_id, film_id));
create table inventory (film_id integer not null, inventory_id serial not null, store_id integer not null, last_update timestamp(6), primary key (inventory_id));
create table language (language_id serial not null, last_update timestamp(6), name varchar(255), primary key (language_id));
create table payment (amount numeric(5,2), payment_id serial not null, last_update timestamp(6), payment_date timestamp(6), primary key (payment_id));
create table rental (rental_id serial not null, last_update timestamp(6), rental_date timestamp(6), return_date timestamp(6) not null, primary key (rental_id));
create table staff (staff_id serial not null, active bigint, last_update timestamp(6), username varchar(16), password varchar(40) not null, email varchar(255) not null, first_name varchar(255), last_name varchar(255), picture varchar(255) not null, primary key (staff_id));
create table store (store_id serial not null, last_update timestamp(6), primary key (store_id));
alter table if exists film add constraint FK88s9635v5hddv7cwig75m3ne2 foreign key (language_id) references language;
alter table if exists film add constraint FK2kqprbtkpsgi2voih48af3stt foreign key (original_language_id) references language;
alter table if exists film_actor add constraint FKsr7lo9p4intei645cws4f9t4l foreign key (actor_id) references actor;
alter table if exists film_actor add constraint FK44uk58x166xx1qd03300206nr foreign key (film_id) references film;
alter table if exists film_category add constraint FKo1ve8mjm8cxf87g7r55w53rcj foreign key (category_id) references category;
alter table if exists film_category add constraint FKr4u0m4y199rhohqiy9gd46l7u foreign key (film_id) references film;
alter table if exists inventory add constraint FKtdgy352s88shlsdbhxqp5k9vk foreign key (store_id) references store;
alter table if exists inventory add constraint FK1w3jxdcj9er5qbnt5okl5quek foreign key (film_id) references film;
